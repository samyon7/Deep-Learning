# Follow this tricks!

def base_model():
    inputs = tf.keras.layers.Input(shape=(IMG_SIZE,IMG_SIZE,3))
    x = x = tf.keras.layers.Conv2D(32, (3,3), activation='relu')(inputs)
    x = tf.keras.layers.MaxPooling2D(2, 2)(x)
    x = tf.keras.layers.Conv2D(64, (3,3), activation='relu')(x)
    x = tf.keras.layers.MaxPooling2D(2,2)(x)
    x1 = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x)
    x1 = tf.keras.layers.MaxPooling2D(2,2)(x1)
    x1 = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x1)
    x1 = tf.keras.layers.MaxPooling2D(2,2)(x1)
    x2 = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x)
    x2 = tf.keras.layers.MaxPooling2D(2,2)(x2)
    x2 = tf.keras.layers.Conv2D(128, (3,3), activation='relu')(x2)
    x2 = tf.keras.layers.MaxPooling2D(2,2)(x2)
    sum_layer = tf.keras.layers.Concatenate()([x1,x2])
    x3 = tf.keras.layers.Flatten()(sum_layer)
    x3 = tf.keras.layers.Dropout(0.5)(x3)
    x3 = tf.keras.layers.Dense(512, activation='relu')(x3)

    outputs = tf.keras.layers.Dense(4, activation='softmax')(x3)
    model = tf.keras.Model(inputs=inputs, outputs=outputs)
    return model

model = base_model()